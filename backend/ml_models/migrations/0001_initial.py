# Generated by Django 5.2.4 on 2025-07-18 16:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('symptoms', models.TextField(help_text='Comma-separated list of symptoms')),
                ('treatments', models.TextField(help_text='Recommended treatments')),
                ('severity_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('causes', models.TextField(blank=True, help_text='Common causes of the disease')),
                ('prevention', models.TextField(blank=True, help_text='Prevention methods')),
                ('complications', models.TextField(blank=True, help_text='Possible complications')),
                ('prognosis', models.TextField(blank=True, help_text='Expected outcome and recovery')),
                ('category', models.CharField(blank=True, help_text='Disease category (e.g., Infectious, Chronic)', max_length=100)),
                ('icd_10_code', models.CharField(blank=True, help_text='ICD-10 classification code', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_messages', models.IntegerField(default=0)),
                ('user_satisfaction', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('resolved_query', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatbot_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chatbot Conversation',
                'verbose_name_plural': 'Chatbot Conversations',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('bot', 'Bot Response'), ('system', 'System Message')], max_length=10)),
                ('content', models.TextField()),
                ('intent_detected', models.CharField(blank=True, max_length=100)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ml_models.chatbotconversation')),
            ],
            options={
                'verbose_name': 'Chatbot Message',
                'verbose_name_plural': 'Chatbot Messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DiseasePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptoms_input', models.TextField(help_text='Original symptoms input by patient')),
                ('processed_symptoms', models.TextField(help_text='Processed symptoms for ML model')),
                ('confidence_score', models.DecimalField(decimal_places=4, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('alternative_predictions', models.JSONField(default=list, help_text='List of alternative predictions with confidence scores')),
                ('model_version', models.CharField(default='1.0', max_length=20)),
                ('model_type', models.CharField(default='RandomForest', max_length=50)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('doctor_notes', models.TextField(blank=True)),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('actual_diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actual_diagnoses', to='ml_models.disease')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_predictions', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='patients.patient')),
                ('predicted_disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_models.disease')),
            ],
            options={
                'verbose_name': 'Disease Prediction',
                'verbose_name_plural': 'Disease Predictions',
                'ordering': ['-prediction_date'],
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('disease_prediction', 'Disease Prediction'), ('symptom_analysis', 'Symptom Analysis'), ('risk_assessment', 'Risk Assessment'), ('chatbot', 'Medical Chatbot')], max_length=30)),
                ('version', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('precision', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('recall', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('f1_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('config_file_path', models.CharField(blank=True, max_length=500)),
                ('training_data_info', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=False)),
                ('is_deployed', models.BooleanField(default=False)),
                ('trained_at', models.DateTimeField(blank=True, null=True)),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'ML Model',
                'verbose_name_plural': 'ML Models',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='PredictionFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('correct', 'Correct Prediction'), ('incorrect', 'Incorrect Prediction'), ('partially_correct', 'Partially Correct'), ('insufficient_info', 'Insufficient Information')], max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('missing_symptoms', models.TextField(blank=True, help_text='Symptoms that should have been considered')),
                ('additional_info', models.TextField(blank=True)),
                ('usefulness_rating', models.IntegerField(help_text='How useful was the prediction (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='ml_models.diseaseprediction')),
                ('provided_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('suggested_disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ml_models.disease')),
            ],
            options={
                'verbose_name': 'Prediction Feedback',
                'verbose_name_plural': 'Prediction Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, help_text='e.g., Respiratory, Neurological', max_length=50)),
                ('severity_indicator', models.CharField(blank=True, help_text='Indicates severity level', max_length=20)),
                ('common_in_diseases', models.ManyToManyField(blank=True, related_name='common_symptoms', to='ml_models.disease')),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
                'ordering': ['name'],
            },
        ),
    ]
