# Generated by Django 5.2.4 on 2025-07-18 16:34

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('bed_capacity', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Hospital',
                'verbose_name_plural': 'Hospitals',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Specialization',
                'verbose_name_plural': 'Specializations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.CharField(editable=False, max_length=10, unique=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('years_experience', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('qualification', models.CharField(help_text='e.g., MBBS, MD, MS', max_length=200)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('consultation_hours_start', models.TimeField(blank=True, null=True)),
                ('consultation_hours_end', models.TimeField(blank=True, null=True)),
                ('rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.IntegerField(default=0)),
                ('total_patients_treated', models.IntegerField(default=0)),
                ('bio', models.TextField(blank=True, help_text="Doctor's biography and expertise")),
                ('languages_spoken', models.CharField(blank=True, help_text='Comma-separated languages', max_length=200)),
                ('awards_recognition', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='doctors.hospital')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.specialization')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'ordering': ['-rating', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='DoctorEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=200)),
                ('year_completed', models.IntegerField()),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='doctors.doctor')),
            ],
            options={
                'verbose_name': 'Doctor Education',
                'verbose_name_plural': 'Doctor Education',
                'ordering': ['-year_completed'],
            },
        ),
        migrations.CreateModel(
            name='DoctorExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience', to='doctors.doctor')),
            ],
            options={
                'verbose_name': 'Doctor Experience',
                'verbose_name_plural': 'Doctor Experience',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('max_patients', models.IntegerField(default=20, help_text='Maximum patients per day')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='doctors.doctor')),
            ],
            options={
                'verbose_name': 'Doctor Availability',
                'verbose_name_plural': 'Doctor Availability',
                'ordering': ['doctor', 'weekday'],
                'unique_together': {('doctor', 'weekday')},
            },
        ),
        migrations.CreateModel(
            name='DoctorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
            ],
            options={
                'verbose_name': 'Doctor Review',
                'verbose_name_plural': 'Doctor Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('doctor', 'patient')},
            },
        ),
    ]
